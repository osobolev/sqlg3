subprojects {

    apply(plugin: "java-library")
    apply(plugin: "maven-publish")

    group = "com.github.osobolev.sqlg3"
    version = "2.0"

    compileJava.options.compilerArgs << "-Xlint:-options,deprecation,unchecked"
    compileJava.options.encoding = "UTF-8"
    sourceCompatibility = "8"
    targetCompatibility = "8"
    sourceSets.main.java.srcDirs = ["src"]
    sourceSets.test.java.srcDirs = ["test"]

    repositories {
        mavenLocal()
        mavenCentral()
    }

    java {
        withSourcesJar()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from(components.java)
            }
        }
    }

    jar.manifest.attributes("Implementation-Version": project.version)

    javadoc.enabled = false

    clean.doLast {
        project.delete("$projectDir/out")
    }
}

project(":sqlg3-core") {
}

project(":sqlg3-runtime") {
    dependencies {
        api(project(":sqlg3-core"))
    }
}

project(":sqlg3-preprocess") {

    configurations { antlr }

    dependencies {
        api(project(":sqlg3-runtime"))
        implementation("org.antlr:antlr4-runtime:4.9.2")
        compileOnly("org.apache.ant:ant:1.10.11")

        testRuntimeOnly("org.postgresql:postgresql:42.2.24")

        antlr("org.antlr:antlr4:4.9.2")
    }

    task lexer(type: JavaExec) {
        inputs.files(file("grammar/Java8Lexer.g4"))
        outputs.files(file("src/sqlg3/preprocess/lexer/Java8Lexer.java"))
        main = "org.antlr.v4.Tool"
        classpath = configurations.antlr
        args("-package", "sqlg3.preprocess.lexer", "-Xexact-output-dir", "-o", "src/sqlg3/preprocess/lexer", "-encoding", "UTF-8", "grammar/Java8Lexer.g4")
    }
    compileJava.dependsOn lexer
}

project(":sqlg3-remote-common") {
    dependencies {
        api(project(":sqlg3-core"))
    }
}

project(":sqlg3-remote-client") {
    dependencies {
        api(project(":sqlg3-remote-common"))
    }
}

project(":sqlg3-remote-server") {
    dependencies {
        api(project(":sqlg3-remote-common"))
        api(project(":sqlg3-runtime"))
    }
}

project(":sqlg3-remote-kryo") {
    dependencies {
        api(project(":sqlg3-remote-common"))
        api("com.esotericsoftware:kryo:5.2.0")
    }
}
